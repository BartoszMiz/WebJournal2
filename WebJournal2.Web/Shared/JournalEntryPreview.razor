@using System.Text.RegularExpressions

<article>
	<div class="entry-preview">
		<header>
			<NavLink href="@viewEntryUrl">
				<h1 class="entry-preview-header">@Entry.Title</h1>
			</NavLink>
			<h3 class="entry-preview-date">
				<time>
					@Entry.SubmitDate.ToString("(ddd) dd-MMM-yyyy HH:mm")
				</time>
			</h3>
		</header>
		<p class="entry-preview-paragraph">
			@{
				string paragraph = JournalEntry.GetParagraphs(Entry.Content)[0];
				string sanitisedParagraph = paragraph.Replace("<", "&lt;");
				string html = Markdig.Markdown.ToHtml(sanitisedParagraph);
				html = html.Remove(html.IndexOf("<p>"), 3);
				html = html.Remove(html.IndexOf("</p>"), 4);
				html = html.Remove(html.Length - 1);
				html = html.Replace("\n", "<br>");
				html = Regex.Replace(html, "<a([^>]+)>", "<a$1 target=\"_blank\">");
			}
			@((MarkupString)(html))
			<NavLink href="@viewEntryUrl">
				<span class="entry-preview-readmore">Read more...</span>
			</NavLink>
		</p>
	</div>
</article>

@if (UseDivider)
{
	<hr class="entry-preview-divider">
}

@code
{
	[Parameter]
	public JournalEntry Entry { get; set; }
	[Parameter]
	public bool UseDivider { get; set; } = true;

	private string viewEntryUrl;

	protected override void OnInitialized()
	{
		viewEntryUrl = $"/view-entry/{Entry.Id}";
		base.OnInitialized();
	}
}